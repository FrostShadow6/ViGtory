{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","dimensions","Array","keys","map","j","renderSquare","length","status","renderBoard","React","Component","calculateWinner","lines","a","b","c","validate_content_regex","event","validations","content","currentTarget","regex","Object","RegExp","slice","test","UsernameInput","state","valid","err_msg","regex_val_err_msg","validation_rgx_msg","setState","Floating","Control","type","name","placeholder","defaultValue","onChange","validate_content_clientside","bind","required","isInvalid","Feedback","htmlFor","PasswordInput","pwTconfF","form_field_name","split","logTregF","password_txt","main_password_action","MailInput","DegreeInput","Select","field_name","ScreenToggleLoginRegister","children","eventKey","switchScreen","useAccordionButton","LoginForm","user","username","password","noValidate","method","action","RegisterForm","main_pwd_txt","pwd","updateMainPassword","confirmPassword","getMainPassword","mail","degree","degreeList","InitialScreen","loginTregisterF","getValidationRegexAndErrorMessages","getDegreeList","defaultActiveKey","Collapse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d72dc63d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Accordion, Button, Card, InputGroup, Form, FormControl } from 'react-bootstrap';\r\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button className=\"square\" onClick={props.onClick}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\n\t\r\nclass Board extends React.Component {\r\n\r\n\trenderSquare(i) {\r\n\t\treturn (\r\n\t\t\t<Square\r\n\t\t\t\tvalue={this.props.squares[i]}\r\n\t\t\t\tonClick={() => this.props.onClick(i)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\trenderBoard() {\r\n\t\tconst dimensions = [...Array(3).keys()];\r\n\r\n\t\treturn(\r\n\t\t\tdimensions.map(i => {return(\r\n\r\n\t\t\t\t<div className=\"board-row\">\r\n\r\n\t\t\t\t{dimensions.map(j => {return(\r\n\t\t\t\t\tthis.renderSquare(i*dimensions.length+j)\r\n\t\t\t\t)})}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"status\">{this.status}</div>\r\n\t\t\t\t{this.renderBoard()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thistory: [{\r\n\t\t\t\tsquares: Array(9).fill(null),\r\n\t\t\t}],\r\n\t\t\tstepNumber: 0,\r\n\t\t\txIsNext: true\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\thandleClick(i){\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif (calculateWinner(squares) || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([{\r\n\t\t\t\tsquares: squares,\r\n\t\t\t}]),\r\n\t\t\tstepNumber: history.length,\r\n\t\t\txIsNext: !this.state.xIsNext\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tjumpTo(step) {\r\n\t\tthis.setState({\r\n\t\t  stepNumber: step,\r\n\t\t  xIsNext: (step % 2) === 0,\r\n\t\t});\r\n\t  }\r\n\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\tconst winner = calculateWinner(current.squares);\r\n\r\n\r\n\r\n\t\tconst moves = history.map((step, move) => {\r\n\t\t\tconst desc = move ?\r\n\t\t\t\t ((move === history.length-1) ? 'Go to current move' : ('Go to move #' + move)) :\r\n\t\t\t\t'Go to game start';\r\n\t\t\treturn (\r\n\t\t\t\t<li key={move}>\r\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\r\n\r\n\t\tlet status;\r\n\t\tif (winner) {\r\n\t\t\tstatus = 'Winner: ' + winner;\r\n\t\t} else {\r\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t<Board\r\n\t\t\t\t\tsquares={current.squares}\r\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\r\n\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{status}</div>\r\n\t\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction validate_content_regex(event, validations){\r\n\t//Comprobamos errores de formato con Regex\r\n\tlet content = event.currentTarget.value;\r\n\t//console.log(content);\r\n\r\n\tfor (let i = 0; i < validations.length; i++) {\r\n\t\t//console.log(Object.keys(validations[i])[0]);\r\n\r\n\t\tlet regex = Object.keys(validations[i])[0];\r\n\t\t//console.log(regex.slice(1, -1));\r\n\t\t//console.log( new RegExp(regex.slice(1, -1)).test(content) );\r\n\r\n\t\tif (! ( new RegExp(regex.slice(1, -1)).test(content) ) ){\r\n\t\t\treturn validations[i][regex];\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UsernameInput extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tvalidate_content_clientside(event){\r\n\r\n\t\t//Comprobamos errores de formato con Regex\r\n\t\tlet regex_val_err_msg = validate_content_regex(event, this.props.validation_rgx_msg);\r\n\t\tif (regex_val_err_msg !== false){\r\n\t\t\t//console.log(\"err_msg: \" + regex_val_err_msg);\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalid: false,\r\n\t\t\t\t//err_msg: validations[i][regex]\r\n\t\t\t\terr_msg: regex_val_err_msg\r\n\t\t\t});\r\n\t\t\t//console.log(\"err_msg: \" + this.state.err_msg);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Si todo es correcto\r\n\t\tthis.setState({\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\"\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\t//console.log(this.props.validation_rgx_msg[0]);\r\n\t\t//return(<TextInput field_name=\"Nom d'usuari\" form_field_name=\"username\"/>);\r\n\r\n\t\treturn(\r\n\r\n\t\t\t<Form.Floating className=\"mt-3\">\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tname={\"username\"} \r\n\t\t\t\t\tplaceholder=\"usuari\" \r\n\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\tonChange={this.validate_content_clientside.bind(this)}\r\n\t\t\t\t\trequired \r\n\t\t\t\t\tisInvalid={!this.state.valid}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t{this.state.err_msg}\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t<label htmlFor=\"floatingInputCustom\">Nom d'usuari</label>\r\n\r\n\t\t\t</Form.Floating>\r\n\r\n\t\t);\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass PasswordInput extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\",\r\n\t\t\tpwTconfF: (props.form_field_name.split(\"_\").length < 3),\r\n\t\t\tlogTregF: (props.form_field_name.split(\"_\")[0] === \"login\")\r\n\t\t};\r\n\t}\r\n\r\n\tgetPasswordText(){\r\n\t\treturn this.state.password_txt;\r\n\t}\r\n\r\n\tvalidate_content_clientside(event){\r\n\r\n\t\tlet password_txt = event.currentTarget.value;\r\n\r\n\t\tlet valid = true;\r\n\t\tlet err_msg = \"\";\r\n\t\tlet pwTconfF = this.state.pwTconfF;\r\n\t\tlet logTregF = this.state.logTregF;\r\n\r\n\r\n\t\t//Si es un campo de contraseña original\r\n\t\tif (pwTconfF){\r\n\r\n\t\t\tif (!logTregF){\r\n\t\t\t\t//Si estamos en el formulario de registro, actualizamos la contraseña común para la confirmación\r\n\t\t\t\tthis.props.main_password_action(password_txt);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Comprobamos errores de formato con Regex\r\n\t\t\tlet regex_val_err_msg = validate_content_regex(event, this.props.validation_rgx_msg);\r\n\t\t\tif (regex_val_err_msg !== false){\r\n\t\t\t\t\r\n\t\t\t\tvalid = false;\r\n\t\t\t\terr_msg = regex_val_err_msg;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t//Si es un campo de confirmar contraseña\r\n\t\telse{\r\n\t\t\t//Comprobamos que las contraseñas coincidan\r\n\t\t\tif (this.props.main_password_action() !== password_txt){\r\n\t\t\t\tvalid = false;\r\n\t\t\t\terr_msg = \"Les contrasenyes han de coincidir.\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t//Actualizamos el estado\r\n\t\tthis.setState({\r\n\t\t\tvalid: valid,\r\n\t\t\terr_msg: err_msg,\r\n\t\t\tpwTconfF: pwTconfF,\r\n\t\t\tlogTregF: logTregF\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\tlet pwTconfF = this.state.pwTconfF;\r\n\t\t//Contraseña normal\r\n\t\tif (this.props.form_field_name.split(\"_\").length < 3){\r\n\t\t\t//console.log(this.props.validation_rgx_msg[0]);\r\n\t\t}\r\n\t\t//Confirmar contraseña\r\n\t\telse {\r\n\r\n\t\t}\r\n\t\t//return(<TextInput field_name=\"Contrasenya\" form_field_name=\"password\"/>);\r\n\t\treturn(\r\n\r\n\t\t\t<Form.Floating className={\"mt-\"+(pwTconfF ? \"3\":\"1\")+\" mb-\"+(pwTconfF ? \"1\":\"3\")}>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\tname={(pwTconfF ? \"p\" : \"confirmP\")+\"assword\"} \r\n\t\t\t\t\tplaceholder=\"contrasenya\" \r\n\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\tonChange={this.validate_content_clientside.bind(this)}\r\n\t\t\t\t\trequired \r\n\t\t\t\t\tisInvalid={!this.state.valid}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t{this.state.err_msg}\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t<label htmlFor=\"floatingInputCustom\">{pwTconfF ? \"Contrasenya\" : \"Confirmar contrasenya\"}</label>\r\n\t\t\t</Form.Floating>\r\n\r\n\t\t);\r\n\t};\r\n}\r\n\r\nclass MailInput extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tvalidate_content_clientside(event){\r\n\r\n\t\t//Comprobamos errores de formato con Regex\r\n\t\tlet regex_val_err_msg = validate_content_regex(event, this.props.validation_rgx_msg);\r\n\t\tif (regex_val_err_msg !== false){\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalid: false,\r\n\t\t\t\terr_msg: regex_val_err_msg\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Si todo es correcto\r\n\t\tthis.setState({\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\"\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn(\r\n\r\n\t\t\t<Form.Floating className=\"mt-3\">\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\tname={\"email\"} \r\n\t\t\t\t\tplaceholder=\"usuari@domini.xyz\" \r\n\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\tonChange={this.validate_content_clientside.bind(this)}\r\n\t\t\t\t\trequired \r\n\t\t\t\t\tisInvalid={!this.state.valid}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t{this.state.err_msg}\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t<label htmlFor=\"floatingInputCustom\">Correu electrònic</label>\r\n\r\n\t\t\t</Form.Floating>\r\n\r\n\t\t);\r\n\t};\r\n}\r\n\r\nclass DegreeInput extends React.Component {\r\n\trender(){\r\n\t\treturn(<Form.Select field_name=\"Grau d'estudis\" form_field_name=\"degree\"/>);\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\nfunction ScreenToggleLoginRegister({ children, eventKey }){\r\n\tconst switchScreen = useAccordionButton(eventKey, ()=>{/*console.log(\"Accordion \"+eventKey+\" triggered!\")*/});\r\n\t\r\n\treturn(\r\n\t\t<span \r\n\t\t\tclassName=\"interactiveToggleLoginRegister\"\r\n\t\t\tonClick={switchScreen}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</span>\r\n\t);\r\n}\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\t\r\n\trender(){\r\n\t\t/*let User = new UsernameInput();\r\n\t\tUser.props.form_field_name=\"login_username\";\r\n\t\tUser.props.validation_rgx_msg=this.props.validation_rgx_msg.username;*/\r\n\r\n\t\tlet user = <UsernameInput form_field_name=\"login_username\" validation_rgx_msg={this.props.validation_rgx_msg.username} />;\r\n\t\t//console.log(user.props.form_field_name);\r\n\r\n\t\tlet password = <PasswordInput form_field_name=\"login_password\" validation_rgx_msg={this.props.validation_rgx_msg.password} />;\r\n\r\n\t\treturn(\r\n\t\t\t<Form noValidate method=\"post\" action=\"http://httpbin.org/post\">\r\n\t\t\t\t<h1>Inicia sessió:</h1>\r\n\t\t\t\t{user}\r\n\t\t\t\t{password}\r\n\t\t\t\t<p><Button type=\"submit\" className=\"mt-3 mb-2\">Accedeix</Button></p>\r\n\t\t\t\t{/*<p className=\"mt-3 mb-4\">\r\n\t\t\t\t\tHas oblidat la teva contrasenya?&nbsp;\r\n\t\t\t\t\t<ScreenToggleLoginRegister eventKey=\"accord_register\">Clica aquí!</ScreenToggleLoginRegister>\r\n\t\t\t\t</p>*/}\r\n\t\t\t\t<p className=\"mt-1 mb-1\">\r\n\t\t\t\t\tNo tens un compte?&nbsp;\r\n\t\t\t\t\t<ScreenToggleLoginRegister eventKey=\"accord_register\">Crea'n un!</ScreenToggleLoginRegister>\r\n\t\t\t\t</p>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nclass RegisterForm extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmain_pwd_txt: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\tupdateMainPassword(pwd){\r\n\t\t//console.log(\"UPDATE: \"+pwd);\r\n\t\tthis.setState({\r\n\t\t\tmain_pwd_txt: pwd\r\n\t\t});\r\n\t}\r\n\tgetMainPassword(){\r\n\t\t//console.log(\"GET: \"+this.state.main_pwd_txt);\r\n\t\treturn this.state.main_pwd_txt;\r\n\t}\r\n\r\n\r\n\trender(){\r\n\r\n\t\tlet user = <UsernameInput form_field_name=\"register_username\" validation_rgx_msg={this.props.validation_rgx_msg.username} />;\r\n\t\t//console.log(user.props.form_field_name);\r\n\r\n\t\tlet password = <PasswordInput form_field_name=\"register_password\"  validation_rgx_msg={this.props.validation_rgx_msg.password} main_password_action={(pwd) => this.updateMainPassword(pwd)} />;\r\n\r\n\t\tlet confirmPassword = <PasswordInput form_field_name=\"register_password_confirm\" main_password_action={() => this.getMainPassword()} />\r\n\r\n\t\tlet mail = <MailInput form_field_name=\"register_mail\" validation_rgx_msg={this.props.validation_rgx_msg.mail} />;\r\n\r\n\t\tlet degree = <DegreeInput form_field_name=\"register_degree\" degreeList={this.props.degreeList} />;\r\n\r\n\t\treturn(\r\n\t\t\t<Form noValidate method=\"post\" action=\"http://httpbin.org/post\">\r\n\t\t\t\t<h1>Crea un nou compte:</h1>\r\n\t\t\t\t{user}\r\n\t\t\t\t{password}\r\n\t\t\t\t{confirmPassword}\r\n\t\t\t\t{mail}\r\n\t\t\t\t{degree}\r\n\t\t\t\t<p><Button type=\"submit\" className=\"mt-3 mb-2\">Crea compte</Button></p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tJa tens un compte?&nbsp;\r\n\t\t\t\t\t<ScreenToggleLoginRegister eventKey=\"accord_login\">Accedeix-hi aquí!</ScreenToggleLoginRegister>\r\n\t\t\t\t</p>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass InitialScreen extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t//loginTregisterF: this.props.loginTregisterF\r\n\t\t\tloginTregisterF: true\r\n\t\t};\r\n\t\t\r\n\t}\r\n\r\n\tLoginOrRegisterClick() {\r\n\t\tthis.setState({\r\n\t\t\tloginTregisterF: !this.state.loginTregisterF\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n\tgetValidationRegexAndErrorMessages(){\r\n\r\n\t\t//Uso de los regex: regex.test(string); //(pero el regex es idetificado por las barras, y no puede ser un string)\r\n\t\t//Para poder usar el string regex a modo de objeto regex, hará falta usar RegExp y slice:\r\n\t\t//(new RegExp(\"/^.+@.+$/\".slice(1, -1)).test(\"hola@gmail.com\"));\r\n\r\n\t\tlet validation_rgx_msg = \r\n\t\t{\r\n\t\t\t\"username\" : [\r\n\t\t\t\t{\"/^.{4,32}$/\" : \"El teu nom d'usuari només pot ocupar 4-32 caràcters.\"},\r\n\t\t\t\t{\"/^[a-zA-Z0-9_\\\\-\\\\.]+$/\" : \"El teu nom d'usuari només pot contenir caràcters [a-z, A-Z, 0-9, _, -, .].\"}\r\n\t\t\t],\r\n\t\t\t\"password\" : [\r\n\t\t\t\t{\"/^.{8,32}$/\" : \"La teva contrasenya només pot ocupar 8-32 caràcters.\"},\r\n\t\t\t\t{\"/^[a-zA-Z0-9_\\\\-\\\\.]+$/\" : \"La teva contrasenya només pot contenir caràcters [a-z, A-Z, 0-9, _, -, .].\"},\r\n\t\t\t\t{\"/(?=.*[a-z])/\" : \"La teva contrasenya ha de contenir almenys 1 lletra minúscula (a-z).\"},\r\n\t\t\t\t{\"/(?=.*[A-Z])/\" : \"La teva contrasenya ha de contenir almenys 1 lletra majúscula (A-Z).\"},\r\n\t\t\t\t{\"/(?=.*[0-9])/\" : \"La teva contrasenya ha de contenir almenys 1 nombre (0-9).\"}\r\n\t\t\t],\r\n\t\t\t\"mail\" : [\r\n\t\t\t\t{\"/^.+@.+\\\\..+$/\" : \"És necessària una adreça electrònica vàlida.\\nPer exemple: usuari@domini.xyz\"}\r\n\t\t\t]\r\n\r\n\t\t};\r\n\r\n\t\t//Como lo pasaremos como prop, no hace falta hacer JSON.stringify()\r\n\t\treturn validation_rgx_msg;\r\n\t}\r\n\r\n\tgetDegreeList(){\r\n\r\n\t\tlet degreeList = [\r\n\t\t\t\"Grau en Àmbit Industrial\",\r\n\t\t\t\"Grau en Enginyeria Mecànica\",\r\n\t\t\t\"Grau en Enginyeria Elèctrica\",\r\n\t\t\t\"Grau en Enginyeria Electrònica Industrial i Automàtica\",\r\n\t\t\t\"Grau en Enginyeria Informàtica\",\r\n\t\t\t\"Grau en Enginyeria de Disseny Industrial i Desenvolupament del Producte\"\r\n\t\t]\r\n\r\n\t\treturn degreeList;\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tlet validation_rgx_msg = this.getValidationRegexAndErrorMessages();\r\n\t\tlet degreeList = this.getDegreeList();\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<Accordion defaultActiveKey=\"accord_login\" className=\"content\">\r\n\r\n\t\t\t\t<Accordion.Collapse eventKey=\"accord_login\" >\r\n\t\t\t\t\t<div className=\"content_wrapper\">\r\n\t\t\t\t\t<LoginForm validation_rgx_msg={validation_rgx_msg} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Accordion.Collapse>\r\n\r\n\t\t\t\t<Accordion.Collapse eventKey=\"accord_register\">\r\n\t\t\t\t\t<div className=\"content_wrapper\">\r\n\t\t\t\t\t<RegisterForm validation_rgx_msg={validation_rgx_msg} degreeList={degreeList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Accordion.Collapse>\r\n\r\n\t\t\t</Accordion>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n\t<InitialScreen />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}